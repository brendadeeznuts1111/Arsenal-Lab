name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test & Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        bun-version: ['1.3.0']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Type check
        run: bunx tsc --noEmit

      - name: Lint code
        run: bun run lint

      - name: Run tests
        run: bun test

      - name: Build project
        run: bun run build

      - name: Run performance arsenal tests
        run: bun run arsenal:ci
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          name: build-files
          path: dist/

  performance-regression:
    name: Performance Regression Check
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.3.0'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run performance benchmarks
        run: bun run arsenal:ci --baseline

      - name: Compare against baseline
        run: bun run arsenal:ci --compare
        continue-on-error: true

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.3.0'

      - name: Build docs
        run: bun run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: arsenal.bun.sh

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, performance-regression]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.3.0'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build for release
        run: bun run build

      - name: Create release archive
        run: |
          tar -czf bun-performance-arsenal-${{ github.sha }}.tar.gz dist/
          echo "ARCHIVE_PATH=bun-performance-arsenal-${{ github.sha }}.tar.gz" >> $GITHUB_ENV

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## Changes

            Automated release from CI/CD pipeline.

            ### Performance Benchmarks
            - [View benchmark results](https://arsenal.bun.sh/benchmarks)

            ### Build Information
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref }}
            - Build: ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_PATH }}
          asset_name: bun-performance-arsenal.tar.gz
          asset_content_type: application/gzip
