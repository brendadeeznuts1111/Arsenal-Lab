// components/SecurityArsenal/ui/VulnerabilityCard.tsx
import type { Vulnerability } from '../hooks/useSecurityArsenal';

interface VulnerabilityCardProps {
  vulnerability: Vulnerability;
}

export function VulnerabilityCard({ vulnerability }: VulnerabilityCardProps) {
  const severityColors = {
    low: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',
    moderate: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200',
    high: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200',
    critical: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
  };

  const severityIcons = {
    low: 'ℹ️',
    moderate: '⚠️',
    high: '🔶',
    critical: '🔴'
  };

  return (
    <div className="vulnerability-card">
      <div className="vulnerability-header">
        <div className="vulnerability-title">
          <span className="vulnerability-icon">{severityIcons[vulnerability.severity]}</span>
          <span className="vulnerability-name">{vulnerability.title}</span>
        </div>
        <span className={`severity-badge ${severityColors[vulnerability.severity]}`}>
          {vulnerability.severity.toUpperCase()}
        </span>
      </div>

      <div className="vulnerability-details">
        <div className="vulnerability-info">
          <span className="info-label">Package:</span>
          <code className="info-value">{vulnerability.package}</code>
        </div>
        <div className="vulnerability-info">
          <span className="info-label">Version:</span>
          <code className="info-value">{vulnerability.version}</code>
        </div>
        {vulnerability.cve && (
          <div className="vulnerability-info">
            <span className="info-label">CVE:</span>
            <code className="info-value">{vulnerability.cve}</code>
          </div>
        )}
        {vulnerability.patched && (
          <div className="vulnerability-info">
            <span className="info-label">Fix:</span>
            <span className="info-value text-green-600 dark:text-green-400">
              {vulnerability.patched}
            </span>
          </div>
        )}
      </div>

      {vulnerability.url && (
        <a
          href={vulnerability.url}
          target="_blank"
          rel="noopener noreferrer"
          className="vulnerability-link"
        >
          View Advisory →
        </a>
      )}
    </div>
  );
}
